"use strict";function getWaypointByName(e){for(var o=0;o<DATA.waypointsMsg.waypoints.length;o++){var s=DATA.waypointsMsg.waypoints[o];if(s.name===e)return s}}function getTrajectoryByName(e){for(var o,s=0;s<DATA.trajectoriesMsg.trajectories.length&&(o=DATA.trajectoriesMsg.trajectories[s]).name!==e;s++);return o}var PARAMS=PARAMS||{DefaultPose:{position:{x:0,y:0,z:0},orientation:{x:0,y:0,z:0,w:1}},CmdVel:.05,SailDis:.3,DockingBeginDis:.35,PowerWarnThreshold:.2,ChargeStatus:{uncontact:0,contact:1,volAbnormal:2,charging:3},NavCtrl:{stop:0,start:1,pause:2},NavCtrlStatus:{error:-1,idling:0,running:1,paused:2,completed:3,cancelled:4,sub_cancelled:5},NetworkMode:{ap:"ap",wifi:"wifi"},RobotStatus:{MappingStatus:"mappingStatus",LastNetworkSetting:"lastNetworkSetting"},Extensions:["ster","ster2","tofflon"],DiagnosticsLevel:{Warn:1,Error:2,Stale:3}},NAV=NAV||{CmdEnum:{Navigation:"navigation",Gmapping:"gmapping",Cancel:"cancel",Converting:"converting",GamppingPose:"gmapping_pose",SaveMap:"save_map",SaveMapEdit:"save_map_edit",SaveAsMap:"save_as_map",SaveAsMapEdit:"save_as_map_edit",LoadMap:"load_map",LoadMapEdit:"load_map_edit",Userauth:"user_auth",MapSelect:"dbparam-select",MapDelete:"dbparam-delete",MapUpdate:"dbparam-update",MapInsert:"dbparam-insert",Update:"update",RoslogDelete:"roslog-delete",RoslogSelect:"roslog-select",Version:"version"},RosMode:{Gmapping:"gmapping",Navigation:"navigation",Converting:"converting"},WaypointMode:{Map:"map",Timer:"timer",Puber:"publisher",Suber:"subscriber",Pubsuber:"pubsuber",Looper:"looper",CmdVelSetSub:"cmd_vel_set_sub",CmdVel:"cmd_vel",Shell:"shell",SoundPlay:"sound_play",InitialPose:"initial_pose",ScanMaker:"scan_marker",ShellString:"shell_string"},SoundPlayMode:{Stop:"STOP",Start:"START",Once:"ONCE"},WaypointPrefix:{map:"map",timer:"timer",publisher:"pub",subscriber:"sub",looper:"loop",pubsuber:"pubsuber",cmd_vel_set_sub:"velSet",cmd_vel:"vel",shell:"shell",sound_play:"sound",initial_pose:"pose",scan_marker:"scanMarker",shell_string:"shellStr"},ManualCtrlVel:{linear:.4,angular:.8},WaypointsForDock:{pubsuber_auto_charge:{name:"pubsuber_auto_charge",frame_id:"pubsuber",close_enough:0,goal_timeout:0,failure_mode:"3",pose:PARAMS.DefaultPose},vel_forward:{name:"vel_forward",frame_id:"cmd_vel",close_enough:PARAMS.CmdVel,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},vel_stop:{name:"vel_stop",frame_id:"cmd_vel",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},vel_backward:{name:"vel_backward",frame_id:"cmd_vel",close_enough:-PARAMS.CmdVel,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_bumper_on:{name:"pub_bumper_on",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_bumper_off:{name:"pub_bumper_off",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_estop_on:{name:"pub_estop_on",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_estop_off:{name:"pub_estop_off",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_estop_auto:{name:"pub_estop_auto",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_r:{name:"pub_light_r",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_g:{name:"pub_light_g",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_b:{name:"pub_light_b",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_y:{name:"pub_light_y",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},sound_sound_on:{name:"sound_sound_on",frame_id:"sound_play",close_enough:0,goal_timeout:0,failure_mode:"START",pose:PARAMS.DefaultPose},sound_sound_off:{name:"sound_sound_off",frame_id:"sound_play",close_enough:0,goal_timeout:0,failure_mode:"STOP",pose:PARAMS.DefaultPose},sound_sound_play_once:{name:"sound_sound_play_once",frame_id:"sound_play",close_enough:0,goal_timeout:0,failure_mode:"ONCE",pose:PARAMS.DefaultPose},scanMarker_scan:{name:"scanMarker_scan",frame_id:"scan_marker",close_enough:.9,goal_timeout:0,failure_mode:"LOOP",pose:PARAMS.DefaultPose},timer_sail:{name:"timer_sail",frame_id:"timer",close_enough:0,goal_timeout:PARAMS.SailDis/PARAMS.CmdVel,failure_mode:"NONE",pose:PARAMS.DefaultPose}},DockingBeginTrajName:"dock_begin_charge",DockingBegin:["map_dockBegin","pub_estop_off","scanMarker_scan_6","scanMarker_scan_6","pub_light_y","sound_sound_on","vel_forward","pubsuber_auto_charge","vel_stop","sound_sound_off","pub_estop_off","pub_light_b"],DockingEndTrajName:"dock_end_charge",DockingEnd:["","pub_light_y","pub_estop_off","pub_bumper_off","sound_sound_on","vel_backward","timer_sail","vel_stop","sound_sound_off","pub_bumper_on","pub_estop_auto","pub_light_g"],init:function(e){NAV.ros=new ROSLIB.Ros,NAV.ros.connect(e),NAV.ros.on("connection",function(){console.log("[INFO]Connected to rosbridge "+e+"."),DATA.ros=NAV.ros}),NAV.ros.on("close",function(){console.log("[INFO]Rosbridge server "+e+" closed."),ALERT.error({title:"网络错误",text:"Rosbridge连接失败"})}),NAV.ros.on("error",function(){console.error("[ERROR]Connection error.")})},getRobotStatus:function(){for(var e=arguments.length,o=Array(e),s=0;s<e;s++)o[s]=arguments[s];var a=new ROSLIB.Service({ros:NAV.ros,name:"/rosnodejs/robot_status",serviceType:"rosapi/Publishers"});if(0===o.length)r=new ROSLIB.ServiceRequest({topic:""});else{for(var t="",n=0;n<o.length;n++)t+=o[n]+", ";var r=new ROSLIB.ServiceRequest({topic:t})}a.callService(r,function(e){for(var o=0;o<e.publishers.length;o++){var s=e.publishers[o].split(":")[0].trim(),a=e.publishers[o].split(":")[1].trim();switch(s){case PARAMS.RobotStatus.MappingStatus:DATA.mappingStatus=a;break;case PARAMS.RobotStatus.LastNetworkSetting:DATA.lastNetworkSetting=a}}})},dispMapAndWps:function(e){var o=new ROSLIB.Topic({ros:NAV.ros,name:e||"/map_edit",messageType:"nav_msgs/OccupancyGrid"});DATA.topic.mapTopic=o,o.subscribe(function(e){DATA.mapMsg=e,NAV.dispWaypoints()})},dispWaypoints:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/waypoints",messageType:"yocs_msgs/WaypointList"});DATA.topic.waypointsTopic=e,e.subscribe(function(e){console.log("[INFO]Got waypoints"),DATA.waypointsMsg=e})},dispTrajectories:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/trajectories",messageType:"yocs_msgs/TrajectoryList"}).subscribe(function(e){console.log("[INFO]Got trajectories."),DATA.trajectoriesMsg=e})},dispRobot:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/robot_pose",messageType:"geometry_msgs/Pose"});DATA.topic.robotPoseTopic=e,e.subscribe(function(e){DATA.robotPoseMsg=e})},dispGlobalPlan:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/move_base/NavfnROS/plan",messageType:"nav_msgs/Path"});DATA.topic.globalPlanTopic=e,e.subscribe(function(e){DATA.globalPlanMsg=e})},dispLocalPlan:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/move_base/DWAPlannerROS/local_plan",messageType:"nav_msgs/Path"});DATA.topic.localPlanTopic=e,e.subscribe(function(e){DATA.localPlanMsg=e})},dispFootprint:function(e){var o=new ROSLIB.Topic({ros:NAV.ros,name:e||"/move_base/global_costmap/footprint",messageType:"geometry_msgs/PolygonStamped"});DATA.topic.footprintTopic=o,o.subscribe(function(e){DATA.footprintMsg=e})},dispLaserScan:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/scan_rectified",messageType:"sensor_msgs/LaserScan",throttle_rate:200});DATA.topic.laserScanTopic=e,e.subscribe(function(e){DATA.laserScanMsg=e})},dispLocalCostmap:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/move_base/local_costmap/costmap",messageType:"nav_msgs/OccupancyGrid"});DATA.topic.localCostmapTopic=e,e.subscribe(function(o){e.unsubscribe()})},listenTf:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/tf",messageType:"tf2_msgs/TFMessage"}).subscribe(function(e){for(var o=0;o<e.transforms.length;o++){var s=e.transforms[o].header.frame_id,a=e.transforms[o].child_frame_id;s.startsWith("/")&&(s=s.split("/")[1]),a.startsWith("/")&&(a=a.split("/")[1]);var t=s+"2"+a;DATA.tfMsg[t]=e.transforms[o]}})},sendInitialPose:function(e){for(var o=new ROSLIB.Topic({ros:NAV.ros,name:"/initialpose",messageType:"geometry_msgs/PoseWithCovarianceStamped"}),s=[],a=0;a<36;a++)s[a]=0;s[0]=.25,s[7]=.25,s[35]=Math.pow(Math.PI/12,2);var t=new ROSLIB.Message({header:{frame_id:"map"},pose:{pose:e,covariance:s}});o.publish(t),console.log("[INFO]setting initial pose")},subShellFeedback:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/shell_feedback",messageType:"std_msgs/String"}).subscribe(function(e){switch(e.data){case"":break;default:var o=e.data.split(/[ :]/);switch(o[0].trim()){case"dbparam":DATA.mapList=o.slice(1);break;case"update":"update"===DATA.loading.key&&(DATA.loading=!1),"success"===o[1].trim()?ALERT.info({title:"软件更新",text:"更新成功"}):ALERT.error({title:"软件更新",text:"更新失败"})}}})},subDiagnostics:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/diagnostics_agg",messageType:"diagnostic_msgs/DiagnosticArray"}).subscribe(function(e){for(var o=0;o<e.status.length;o++)"/Other/ros_mode"===e.status[o].name&&(DATA.rosMode=e.status[o].message)})},subRosMode:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/ros_mode",messageType:"std_msgs/String"}).subscribe(function(e){DATA.mappingStatus=e.data})},subMappingStatus:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/mappingStatus",messageType:"std_msgs/String"}).subscribe(function(e){DATA.mappingStatus=e.data,e.data===NAV.CmdEnum.SaveMap&&setTimeout(function(){NAV.saveMapEdit()},5e3)})},subNavCtrlStatus:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/nav_ctrl_status",messageType:"yocs_msgs/NavigationControlStatus"}).subscribe(function(e){DATA.navCtrlStatus=e})},subWaypointUserSub:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_user_sub",messageType:"std_msgs/String"}).subscribe(function(e){var o=e.data.indexOf(":"),s=e.data.substr(0,o).trim(),a=e.data.substring(o+1).trim();switch(s){case"read_status":DATA.plcStatus=a}})},subRobotStatus:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/robot_status",messageType:"std_msgs/String"}).subscribe(function(e){var o=e.data.indexOf(":"),s=e.data.substr(0,o).trim(),a=e.data.substring(o+1).trim();switch(s){case"power":var t=parseFloat(a);DATA.powerStatus!==t&&(DATA.powerStatus=t);break;case"charge":var n=parseInt(a);DATA.chargeStatus!==n&&(DATA.chargeStatus=n);break;case"diagnostics":var r=JSON.parse(a);DATA.diagnosticsMsg=r}})},cmdStringTopic:function(){return new ROSLIB.Topic({ros:NAV.ros,name:"/cmd_string",messageType:"std_msgs/String"})},waypointUserPubTopic:function(){return new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_user_pub",messageType:"std_msgs/String"})},pubCmdString:function(e){var o=NAV.cmdStringTopic(),e=new ROSLIB.Message({data:e});o.publish(e)},pubMapEditObstacle:function(e){var o=new ROSLIB.Topic({ros:NAV.ros,name:"/map_edit_obstacle",messageType:"geometry_msgs/Polygon"}),s=new ROSLIB.Message({points:e});o.publish(s)},saveMap:function(){console.log("[INFO]["+(new Date).getTime()+"]pub gmapping pose"),NAV.pubCmdString(NAV.CmdEnum.GamppingPose),console.log("[INFO]["+(new Date).getTime()+"]pub save map"),NAV.pubCmdString(NAV.CmdEnum.SaveMap)},saveMapEdit:function(){console.log("[INFO]["+(new Date).getTime()+"]pub load map"),NAV.pubCmdString(NAV.CmdEnum.LoadMap),setTimeout(function(){console.log("[INFO]["+(new Date).getTime()+"]pub save map edit"),NAV.pubCmdString(NAV.CmdEnum.SaveMapEdit)},2e3)},addWaypoint:function(e){if(!DATA.robotPoseMsg)return console.error("[ERROR]Failed to get robot pose"),void ALERT.error({title:"站点添加错误",text:"无法获得当前机器人位姿"});var o=new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_add",messageType:"yocs_msgs/Waypoint"}),s=new ROSLIB.Message({header:{frame_id:e.frame_id},close_enough:e.close_enough,goal_timeout:e.goal_timeout,failure_mode:e.failure_mode,name:e.name,pose:e.pose});o.publish(s)},delWaypoint:function(e){var o=new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_remove",messageType:"yocs_msgs/Waypoint"}),s=getWaypointByName(e),a=new ROSLIB.Message(s);o.publish(a)},addTrajectory:function(e,o){for(var s=new ROSLIB.Topic({ros:NAV.ros,name:"/trajectory_add",messageType:"yocs_msgs/Trajectory"}),a=[],t=0;t<o.length;t++){var n=o[t];a.push(getWaypointByName(n))}var r=new ROSLIB.Message({name:e,waypoints:a});s.publish(r)},delTrajectory:function(e){var o=new ROSLIB.Topic({ros:NAV.ros,name:"/trajectory_remove",messageType:"yocs_msgs/Trajectory"}),s=getTrajectoryByName(e),a=new ROSLIB.Message(s);o.publish(a)},addWaypointsForDock:function(){for(var e in NAV.WaypointsForDock)if("scanMarker_scan"!==e)NAV.addWaypoint(NAV.WaypointsForDock[e]);else for(var o=9;o>3;o--){var s={};(s=$.extend(s,NAV.WaypointsForDock[e])).name+="_"+o,s.close_enough=.1*o,NAV.addWaypoint(s)}},addTrajForDock:function(){var e=setInterval(function(){0!==DATA.waypointsMsg.waypoints.length&&"timer_sail"===DATA.waypointsMsg.waypoints[DATA.waypointsMsg.waypoints.length-1].name&&(NAV.addTrajectory(NAV.DockingBeginTrajName,NAV.DockingBegin),DATA.dockInitPoseName&&(NAV.DockingEnd[0]=DATA.dockInitPoseName,NAV.addTrajectory(NAV.DockingEndTrajName,NAV.DockingEnd)),clearInterval(e),e=null,console.log("[INFO]trajectories for docking added"))},500)},navCtrl:function(e,o){var s=!1;if(!0===(arguments.length<=2?void 0:arguments[2])&&(s=!0),s||DATA.navCtrlStatus.status===PARAMS.NavCtrlStatus.idling||o!==PARAMS.NavCtrl.start){var a=new ROSLIB.Topic({ros:NAV.ros,name:"/nav_ctrl",messageType:"yocs_msgs/NavigationControl"}),t=new ROSLIB.Message({goal_name:e,control:o});console.log("[INFO]pub "+e+", "+o),a.publish(t)}else ALERT.warn({title:"导航中",text:"正在执行其他任务，当前命令将被忽略"})},manipulateScene:function(e,o){var s=e+":"+o;NAV.pubCmdString(s)},manualCtrl:function(e){var o=e.linear||0,s=e.angular||0,a=new ROSLIB.Topic({ros:NAV.ros,name:"/cmd_vel",messageType:"geometry_msgs/Twist"}),t=new ROSLIB.Message({linear:{x:o,y:0,z:0},angular:{x:0,y:0,z:s}});DATA.manualCtrlTimer&&(clearInterval(DATA.manualCtrlTimer),DATA.manualCtrlTimer=null),0!==o||0!==s?DATA.manualCtrlTimer=setInterval(function(){a.publish(t)},200):a.publish(t)},subLastNetworkSetting:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/last_network_setting",messageType:"std_msgs/String"}).subscribe(function(e){DATA.lastNetworkSetting=e})},setNetwork:function(e,o){var s=new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/network_setting",messageType:"std_msgs/String"});if(e===PARAMS.NetworkMode.ap){t=new ROSLIB.Message({data:""});console.log("[INFO]switch to ap")}else if(e===PARAMS.NetworkMode.wifi){var a="ssid:"+o.ssid+",\n\t\t\t\tpassword: "+o.password+",\n\t\t\t\tip: "+o.ip,t=new ROSLIB.Message({data:a});console.log("[INFO]switch to wifi: "+o.ssid+", ip: "+o.ip)}s.publish(t)},update:function(e,o){var s="";switch(e){case UpdateEvent.Type.onlineAuto:return void NAV.pubCmdString(o);case UpdateEvent.Type.offlineAuto:s="/shell_string";break;case UpdateEvent.Type.others.dbparam:s="/system_shell/shell_string";break;case UpdateEvent.Type.others.openssh:s="/shell_string";break;default:return void console.error("[ERROR]unknown update mode: "+e)}var a=new ROSLIB.Topic({ros:NAV.ros,name:s,messageType:"std_msgs/String"}),t=new ROSLIB.Message({data:o});a.publish(t)}};