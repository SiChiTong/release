"use strict";function getWaypointByName(e){for(var s=0;s<DATA.waypointsMsg.waypoints.length;s++){var o=DATA.waypointsMsg.waypoints[s];if(o.name===e)return o}}function getTrajectoryByName(e){for(var s,o=0;o<DATA.trajectoriesMsg.trajectories.length&&(s=DATA.trajectoriesMsg.trajectories[o]).name!==e;o++);return s}var PARAMS=PARAMS||{DefaultPose:{position:{x:0,y:0,z:0},orientation:{x:0,y:0,z:0,w:1}},CmdVel:.05,SailDis:.3,DockingBeginDis:.35,PowerWarnThreshold:.2,ChargeStatus:{uncontact:0,contact:1,volAbnormal:2,charging:3},NavCtrl:{stop:0,start:1,pause:2},NavCtrlStatus:{error:-1,idling:0,running:1,paused:2,completed:3,cancelled:4,sub_cancelled:5},NetworkMode:{ap:"ap",wifi:"wifi"},RobotStatus:{MappingStatus:"mappingStatus",LastNetworkSetting:"lastNetworkSetting"},Extensions:["ster","ster2","tofflon"],DiagnosticsLevel:{Warn:1,Error:2,Stale:3}},NAV=NAV||{CmdEnum:{Navigation:"navigation",Gmapping:"gmapping",Cancel:"cancel",Converting:"converting",GamppingPose:"gmapping_pose",SaveMap:"save_map",SaveMapEdit:"save_map_edit",SaveAsMap:"save_as_map",SaveAsMapEdit:"save_as_map_edit",LoadMap:"load_map",LoadMapEdit:"load_map_edit",Userauth:"user_auth",MapSelect:"dbparam-select",MapDelete:"dbparam-delete",MapUpdate:"dbparam-update",MapInsert:"dbparam-insert",Update:"update",RoslogDelete:"roslog-delete",RoslogSelect:"roslog-select",Version:"version"},RosMode:{Gmapping:"gmapping",Navigation:"navigation",Converting:"converting"},WaypointMode:{Map:"map",Timer:"timer",Puber:"publisher",Suber:"subscriber",Pubsuber:"pubsuber",Looper:"looper",CmdVelSetSub:"cmd_vel_set_sub",CmdVel:"cmd_vel",Shell:"shell",SoundPlay:"sound_play",InitialPose:"initial_pose",ScanMaker:"scan_marker",ShellString:"shell_string",Pallet:"pallet"},SoundPlayMode:{Stop:"STOP",Start:"START",Once:"ONCE"},WaypointPrefix:{map:"map",timer:"timer",publisher:"pub",subscriber:"sub",looper:"loop",pubsuber:"pubsuber",cmd_vel_set_sub:"velSet",cmd_vel:"vel",shell:"shell",sound_play:"sound",initial_pose:"pose",scan_marker:"scanMarker",shell_string:"shellStr",pallet:"pallet"},ManualCtrlVel:{linear:.4,angular:.8},WaypointsForDock:{pubsuber_auto_charge:{name:"pubsuber_auto_charge",frame_id:"pubsuber",close_enough:0,goal_timeout:0,failure_mode:"3",pose:PARAMS.DefaultPose},vel_forward:{name:"vel_forward",frame_id:"cmd_vel",close_enough:PARAMS.CmdVel,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},vel_stop:{name:"vel_stop",frame_id:"cmd_vel",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},vel_backward:{name:"vel_backward",frame_id:"cmd_vel",close_enough:-PARAMS.CmdVel,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_bumper_on:{name:"pub_bumper_on",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_bumper_off:{name:"pub_bumper_off",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_estop_on:{name:"pub_estop_on",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_estop_off:{name:"pub_estop_off",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_estop_auto:{name:"pub_estop_auto",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_r:{name:"pub_light_r",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_g:{name:"pub_light_g",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_b:{name:"pub_light_b",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},pub_light_y:{name:"pub_light_y",frame_id:"publisher",close_enough:0,goal_timeout:0,failure_mode:"NONE",pose:PARAMS.DefaultPose},sound_sound_on:{name:"sound_sound_on",frame_id:"sound_play",close_enough:0,goal_timeout:0,failure_mode:"START",pose:PARAMS.DefaultPose},sound_sound_off:{name:"sound_sound_off",frame_id:"sound_play",close_enough:0,goal_timeout:0,failure_mode:"STOP",pose:PARAMS.DefaultPose},sound_sound_play_once:{name:"sound_sound_play_once",frame_id:"sound_play",close_enough:0,goal_timeout:0,failure_mode:"ONCE",pose:PARAMS.DefaultPose},scanMarker_scan:{name:"scanMarker_scan",frame_id:"scan_marker",close_enough:.9,goal_timeout:0,failure_mode:"LOOP",pose:PARAMS.DefaultPose},timer_sail:{name:"timer_sail",frame_id:"timer",close_enough:0,goal_timeout:PARAMS.SailDis/PARAMS.CmdVel,failure_mode:"NONE",pose:PARAMS.DefaultPose}},DockingBeginTrajName:"dock_begin_charge",DockingBegin:["map_dockBegin","pub_estop_off","scanMarker_scan_6","scanMarker_scan_6","pub_light_y","sound_sound_on","vel_forward","pubsuber_auto_charge","vel_stop","sound_sound_off","pub_estop_off","pub_light_b"],DockingEndTrajName:"dock_end_charge",DockingEnd:["","pub_light_y","pub_estop_off","pub_bumper_off","sound_sound_on","vel_backward","timer_sail","vel_stop","sound_sound_off","pub_bumper_on","pub_estop_auto","pub_light_g"],init:function(e){NAV.ros=new ROSLIB.Ros,NAV.ros.connect(e),NAV.ros.on("connection",function(){console.log("[INFO]Connected to rosbridge "+e+"."),DATA.ros=NAV.ros}),NAV.ros.on("close",function(){console.log("[INFO]Rosbridge server "+e+" closed."),ALERT.error({title:"网络错误",text:"Rosbridge连接失败"})}),NAV.ros.on("error",function(){console.error("[ERROR]Connection error.")})},getRobotStatus:function(){for(var e=arguments.length,s=Array(e),o=0;o<e;o++)s[o]=arguments[o];var a=new ROSLIB.Service({ros:NAV.ros,name:"/rosnodejs/robot_status",serviceType:"rosapi/Publishers"});if(0===s.length)r=new ROSLIB.ServiceRequest({topic:""});else{for(var t="",n=0;n<s.length;n++)t+=s[n]+", ";var r=new ROSLIB.ServiceRequest({topic:t})}a.callService(r,function(e){for(var s=0;s<e.publishers.length;s++){var o=e.publishers[s].split(":")[0].trim(),a=e.publishers[s].split(":")[1].trim();switch(o){case PARAMS.RobotStatus.MappingStatus:DATA.mappingStatus=a;break;case PARAMS.RobotStatus.LastNetworkSetting:DATA.lastNetworkSetting=a}}})},dispMapAndWps:function(e){var s=new ROSLIB.Topic({ros:NAV.ros,name:e||"/map_edit",messageType:"nav_msgs/OccupancyGrid"});DATA.topic.mapTopic=s,s.subscribe(function(e){DATA.mapMsg=e,NAV.dispWaypoints()})},dispWaypoints:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/waypoints",messageType:"yocs_msgs/WaypointList"});DATA.topic.waypointsTopic=e,e.subscribe(function(e){console.log("[INFO]Got waypoints"),DATA.waypointsMsg=e})},dispTrajectories:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/trajectories",messageType:"yocs_msgs/TrajectoryList"}).subscribe(function(e){console.log("[INFO]Got trajectories."),DATA.trajectoriesMsg=e})},dispRobot:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/robot_pose",messageType:"geometry_msgs/Pose"});DATA.topic.robotPoseTopic=e,e.subscribe(function(e){DATA.robotPoseMsg=e})},dispGlobalPlan:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/move_base/NavfnROS/plan",messageType:"nav_msgs/Path"});DATA.topic.globalPlanTopic=e,e.subscribe(function(e){DATA.globalPlanMsg=e})},dispLocalPlan:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/move_base/DWAPlannerROS/local_plan",messageType:"nav_msgs/Path"});DATA.topic.localPlanTopic=e,e.subscribe(function(e){DATA.localPlanMsg=e})},dispFootprint:function(e){var s=new ROSLIB.Topic({ros:NAV.ros,name:e||"/move_base/global_costmap/footprint",messageType:"geometry_msgs/PolygonStamped"});DATA.topic.footprintTopic=s,s.subscribe(function(e){DATA.footprintMsg=e})},dispLaserScan:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/scan_rectified",messageType:"sensor_msgs/LaserScan",throttle_rate:200});DATA.topic.laserScanTopic=e,e.subscribe(function(e){DATA.laserScanMsg=e})},dispLocalCostmap:function(){var e=new ROSLIB.Topic({ros:NAV.ros,name:"/move_base/local_costmap/costmap",messageType:"nav_msgs/OccupancyGrid"});DATA.topic.localCostmapTopic=e,e.subscribe(function(s){e.unsubscribe()})},listenTf:function(e){if(e=void 0===e||e){var s=new ROSLIB.TFClient({ros:NAV.ros,fixedFrame:"map",angularThres:.01,transThres:.01});s.subscribe("odom",function(e){DATA.tfMsg.map2odom={header:{stamp:null},transform:e}}),s.subscribe("base_footprint",function(e){DATA.tfMsg.map2base_footprint={header:{stamp:null},transform:e}}),s.subscribe("base_laser",function(e){DATA.tfMsg.map2base_laser={header:{stamp:null},transform:e}}),new ROSLIB.TFClient({ros:NAV.ros,fixedFrame:"base_link",angularThres:.01,transThres:.01}).subscribe("base_laser",function(e){DATA.tfMsg.base_link2base_laser={header:{stamp:null},transform:e}})}else new ROSLIB.Topic({ros:NAV.ros,name:"/tf",messageType:"tf2_msgs/TFMessage"}).subscribe(function(e){for(var s=0;s<e.transforms.length;s++){var o=e.transforms[s].header.frame_id,a=e.transforms[s].child_frame_id;o.startsWith("/")&&(o=o.split("/")[1]),a.startsWith("/")&&(a=a.split("/")[1]);var t=o+"2"+a;DATA.tfMsg[t]=e.transforms[s]}})},sendInitialPose:function(e){for(var s=new ROSLIB.Topic({ros:NAV.ros,name:"/initialpose",messageType:"geometry_msgs/PoseWithCovarianceStamped"}),o=[],a=0;a<36;a++)o[a]=0;o[0]=.25,o[7]=.25,o[35]=Math.pow(Math.PI/12,2);var t=new ROSLIB.Message({header:{frame_id:"map"},pose:{pose:e,covariance:o}});s.publish(t),console.log("[INFO]setting initial pose")},subShellFeedback:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/shell_feedback",messageType:"std_msgs/String"}).subscribe(function(e){switch(e.data){case"":break;default:var s=e.data.split(/[ :]/);switch(s[0].trim()){case"dbparam":DATA.mapList=s.slice(1);break;case"update":"update"===DATA.loading.key&&(DATA.loading=!1),"success"===s[1].trim()?ALERT.info({title:"软件更新",text:"更新成功"}):ALERT.error({title:"软件更新",text:"更新失败"})}}})},subDiagnostics:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/diagnostics_agg",messageType:"diagnostic_msgs/DiagnosticArray"}).subscribe(function(e){for(var s=0;s<e.status.length;s++)"/Other/ros_mode"===e.status[s].name&&(DATA.rosMode=e.status[s].message)})},subRosMode:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/ros_mode",messageType:"std_msgs/String"}).subscribe(function(e){DATA.mappingStatus=e.data})},subMappingStatus:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/mappingStatus",messageType:"std_msgs/String"}).subscribe(function(e){DATA.mappingStatus=e.data,e.data===NAV.CmdEnum.SaveMap&&setTimeout(function(){NAV.saveMapEdit()},5e3)})},subNavCtrlStatus:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/nav_ctrl_status",messageType:"yocs_msgs/NavigationControlStatus"}).subscribe(function(e){DATA.navCtrlStatus=e})},subWaypointUserSub:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_user_sub",messageType:"std_msgs/String"}).subscribe(function(e){var s=e.data.indexOf(":"),o=e.data.substr(0,s).trim(),a=e.data.substring(s+1).trim();switch(o){case"read_status":DATA.plcStatus=a}})},subRobotStatus:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/robot_status",messageType:"std_msgs/String"}).subscribe(function(e){var s=e.data.indexOf(":"),o=e.data.substr(0,s).trim(),a=e.data.substring(s+1).trim();switch(o){case"power":var t=parseFloat(a);DATA.powerStatus!==t&&(DATA.powerStatus=t);break;case"charge":var n=parseInt(a);DATA.chargeStatus!==n&&(DATA.chargeStatus=n);break;case"diagnostics":var r=JSON.parse(a);DATA.diagnosticsMsg=r}})},cmdStringTopic:function(){return new ROSLIB.Topic({ros:NAV.ros,name:"/cmd_string",messageType:"std_msgs/String"})},waypointUserPubTopic:function(){return new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_user_pub",messageType:"std_msgs/String"})},pubCmdString:function(e){var s=NAV.cmdStringTopic(),e=new ROSLIB.Message({data:e});s.publish(e)},pubMapEditObstacle:function(e){var s=new ROSLIB.Topic({ros:NAV.ros,name:"/map_edit_obstacle",messageType:"geometry_msgs/Polygon"}),o=new ROSLIB.Message({points:e});s.publish(o)},saveMap:function(){console.log("[INFO]["+(new Date).getTime()+"]pub gmapping pose"),NAV.pubCmdString(NAV.CmdEnum.GamppingPose),console.log("[INFO]["+(new Date).getTime()+"]pub save map"),NAV.pubCmdString(NAV.CmdEnum.SaveMap)},saveMapEdit:function(){console.log("[INFO]["+(new Date).getTime()+"]pub load map"),NAV.pubCmdString(NAV.CmdEnum.LoadMap),setTimeout(function(){console.log("[INFO]["+(new Date).getTime()+"]pub save map edit"),NAV.pubCmdString(NAV.CmdEnum.SaveMapEdit)},2e3)},addWaypoint:function(e){if(!DATA.robotPoseMsg)return console.error("[ERROR]Failed to get robot pose"),void ALERT.error({title:"站点添加错误",text:"无法获得当前机器人位姿"});var s=new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_add",messageType:"yocs_msgs/Waypoint"}),o=new ROSLIB.Message({header:{frame_id:e.frame_id},close_enough:e.close_enough,goal_timeout:e.goal_timeout,failure_mode:e.failure_mode,name:e.name,pose:e.pose});s.publish(o)},delWaypoint:function(e){var s=new ROSLIB.Topic({ros:NAV.ros,name:"/waypoint_remove",messageType:"yocs_msgs/Waypoint"}),o=getWaypointByName(e),a=new ROSLIB.Message(o);s.publish(a)},addTrajectory:function(e,s){for(var o=new ROSLIB.Topic({ros:NAV.ros,name:"/trajectory_add",messageType:"yocs_msgs/Trajectory"}),a=[],t=0;t<s.length;t++){var n=s[t];a.push(getWaypointByName(n))}var r=new ROSLIB.Message({name:e,waypoints:a});o.publish(r)},delTrajectory:function(e){var s=new ROSLIB.Topic({ros:NAV.ros,name:"/trajectory_remove",messageType:"yocs_msgs/Trajectory"}),o=getTrajectoryByName(e),a=new ROSLIB.Message(o);s.publish(a)},addWaypointsForDock:function(){for(var e in NAV.WaypointsForDock)if("scanMarker_scan"!==e)NAV.addWaypoint(NAV.WaypointsForDock[e]);else for(var s=9;s>3;s--){var o={};(o=$.extend(o,NAV.WaypointsForDock[e])).name+="_"+s,o.close_enough=.1*s,NAV.addWaypoint(o)}},addTrajForDock:function(){var e=setInterval(function(){0!==DATA.waypointsMsg.waypoints.length&&"timer_sail"===DATA.waypointsMsg.waypoints[DATA.waypointsMsg.waypoints.length-1].name&&(NAV.addTrajectory(NAV.DockingBeginTrajName,NAV.DockingBegin),DATA.dockInitPoseName&&(NAV.DockingEnd[0]=DATA.dockInitPoseName,NAV.addTrajectory(NAV.DockingEndTrajName,NAV.DockingEnd)),clearInterval(e),e=null,console.log("[INFO]trajectories for docking added"))},500)},navCtrl:function(e,s){var o=!1;if(!0===(arguments.length<=2?void 0:arguments[2])&&(o=!0),o||DATA.navCtrlStatus.status===PARAMS.NavCtrlStatus.idling||s!==PARAMS.NavCtrl.start){var a=new ROSLIB.Topic({ros:NAV.ros,name:"/nav_ctrl",messageType:"yocs_msgs/NavigationControl"}),t=new ROSLIB.Message({goal_name:e,control:s});console.log("[INFO]pub "+e+", "+s),a.publish(t)}else ALERT.warn({title:"导航中",text:"正在执行其他任务，当前命令将被忽略"})},manipulateScene:function(e,s){var o=e+":"+s;NAV.pubCmdString(o)},manualCtrl:function(e){var s=e.linear||0,o=e.angular||0,a=new ROSLIB.Topic({ros:NAV.ros,name:"/cmd_vel",messageType:"geometry_msgs/Twist"}),t=new ROSLIB.Message({linear:{x:s,y:0,z:0},angular:{x:0,y:0,z:o}});DATA.manualCtrlTimer&&(clearInterval(DATA.manualCtrlTimer),DATA.manualCtrlTimer=null),0!==s||0!==o?DATA.manualCtrlTimer=setInterval(function(){a.publish(t)},200):a.publish(t)},subLastNetworkSetting:function(){new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/last_network_setting",messageType:"std_msgs/String"}).subscribe(function(e){DATA.lastNetworkSetting=e})},setNetwork:function(e,s){var o=new ROSLIB.Topic({ros:NAV.ros,name:"/rosnodejs/network_setting",messageType:"std_msgs/String"});if(e===PARAMS.NetworkMode.ap){t=new ROSLIB.Message({data:""});console.log("[INFO]switch to ap")}else if(e===PARAMS.NetworkMode.wifi){var a="ssid:"+s.ssid+",\n\t\t\t\tpassword: "+s.password+",\n\t\t\t\tip: "+s.ip+",\n\t\t\t\trememberSetting: "+s.rememberSetting,t=new ROSLIB.Message({data:a});console.log("[INFO]switch to wifi: "+s.ssid+", \n\t\t\t\tip: "+s.ip+", rememberSetting: "+s.rememberSetting)}o.publish(t)},update:function(e,s){var o="";switch(e){case UpdateEvent.Type.onlineAuto:return void NAV.pubCmdString(s);case UpdateEvent.Type.offlineAuto:o="/shell_string";break;case UpdateEvent.Type.others.dbparam:o="/system_shell/shell_string";break;case UpdateEvent.Type.others.openssh:o="/shell_string";break;default:return void console.error("[ERROR]unknown update mode: "+e)}var a=new ROSLIB.Topic({ros:NAV.ros,name:o,messageType:"std_msgs/String"}),t=new ROSLIB.Message({data:s});a.publish(t)}};