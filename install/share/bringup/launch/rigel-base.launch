<?xml version="1.0"?>
<launch>

    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>

    <node name="system_shell" pkg="system_shell" type="system_shell" output="screen">
        <rosparam>
            time_duration: 7.0
            init_cmd: ll
        </rosparam>
    </node>

    <node name="tf_base_footprint" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            frame_id: base_footprint
            z: 0.02
        </rosparam>
    </node>

    <node name="tf_base_laser" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser
            x: 0.335
            z: 0.08
            roll: 3.14
        </rosparam>
    </node>

    <node name="tf_base_imu" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_imu
            x: -0.12
            z: 0.88
        </rosparam>
    </node>

    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>

    <node name="aqmd_driver" pkg="aqmd_driver" type="aqmd_driver" output="screen">
        <rosparam>
            is_pub_tf: false
            has_encoder: false
            wheel_speed: 23333
            wheel_track: 0.49
            tty_name_l: /dev/left_wheel
            tty_name_r: /dev/right_wheel
        </rosparam>
    </node>

    <node name="teleop_keyboard" pkg="teleop_keyboard" type="teleop_keyboard" output="screen"/>

    <node name="lms1xx" pkg="lms1xx" type="LMS1xx_node">
        <rosparam>
            host: 192.168.0.1
            frame_id: base_laser
        </rosparam>
    </node>

    <node name="scan_filter" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan"/>
        <remap from="scan_filtered" to="scan_filtered"/>
        <rosparam>
            scan_filter_chain:
            - type: laser_filters/LaserArrayFilter
              name: laser_median_filter
              params: 
                range_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
                intensity_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
            scan_filter_chain:
            - name: laser_cutoff
              type: laser_filters/LaserScanAngularBoundsFilter
              params:
                lower_angle: -1.60876090527
                upper_angle: 1.60876090527
        </rosparam>
    </node>

    <node name="scan_rectifier" pkg="scan_rectifier" type="scan_rectifier" output="screen">
        <remap from="scan_input" to="scan_filtered"/>
        <remap from="scan_output" to="scan_rectified"/>
        <rosparam>
            max_range: 20.0
        </rosparam>
    </node>

    <node name="robot_pose_ekf" pkg="robot_pose_ekf" type="robot_pose_ekf">
        <rosparam>
            output_frame: odom
            base_footprint_frame: base_footprint
            freq: 30.0
            sensor_timeout: 1.0
            odom_used: true
            imu_used: false #true
            vo_used: false
        </rosparam>
    </node>

    <node name="hector_mapping" pkg="hector_mapping" type="hector_mapping" output="screen">
        <rosparam>
            base_frame: base_footprint
            map_frame: map
            odom_frame: base_footprint
            map_resolution: 0.075
            map_size: 2048
            #pub_map_odom_transform: false
            pub_map_scanmatch_transform: false
            #use_initial_map: true
        </rosparam>
    </node>

    <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">
        <remap from="odom" to="/odom_0"/>
        <rosparam>
            base_global_planner: "navfn/NavfnROS"         
            base_local_planner: "dwa_local_planner/DWAPlannerROS"
            recovery_behaviors:
              - name: 'conservative_reset'
                type: 'clear_costmap_recovery/ClearCostmapRecovery'
              - name: 'aggressive_reset'
                type: 'clear_costmap_recovery/ClearCostmapRecovery'
            conservative_reset:
                reset_distance: 3.0
                layer_names: [obstacle_layer]
            aggressive_reset:
                reset_distance: 0.0
                layer_names: [obstacle_layer]
            controller_frequency: 2.0
            planner_patience: 5.0 #0.1
            controller_patience: 15.0 #0.3
            conservative_reset_dist: 3.0 #0.25
            recovery_behavior_enabled: true
            clearing_rotation_allowed: false
            oscillation_timeout: 10.0
            planner_frequency: 1.0 #0.0
            global_costmap:
                global_frame: map
                robot_base_frame: base_footprint
                transform_tolerance: 0.2 #0.5
                update_frequency: 2.0 #5.0
                publish_frequency: 0.5 #0.0
                static_map: true
                footprint: [[0.40, -0.30], [0.40, 0.30], [-0.40, 0.30], [-0.40, -0.30]]
                resolution: 0.075
                plugins:
                  - name: static_layer
                    type: "costmap_2d::StaticLayer"
                  - name: obstacle_layer
                    type: "costmap_2d::ObstacleLayer"
                  - name: inflation_layer
                    type: "costmap_2d::InflationLayer"
                static_layer:
                    map_topic: /map #/map_edit
                obstacle_layer:
                    observation_sources: scan_rectified
                    scan_rectified:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 1.0
                        min_obstacle_height: -1.0
                        inf_is_valid: true
                    track_unknown_space: false #true
                    z_voxels: 8
                inflation_layer:
                    inflation_radius: 0.75
                    cost_scaling_factor: 1
            local_costmap:
                global_frame: base_footprint #odom
                robot_base_frame: base_footprint
                transform_tolerance: 0.2 #0.5
                update_frequency: 5.0
                publish_frequency: 2.0 #0.5
                footprint: [[0.40, -0.30], [0.40, 0.30], [-0.40, 0.30], [-0.40, -0.30]]
                static_map: false
                rolling_window: true
                width: 6.0
                height: 6.0
                resolution: 0.075
                plugins:
                  - name: obstacle_layer
                    type: "costmap_2d::ObstacleLayer"
                  - name: inflation_layer
                    type: "costmap_2d::InflationLayer"
                obstacle_layer:
                    observation_sources: scan_rectified
                    scan_rectified:
                        expected_update_rate: 5.0
                        data_type: LaserScan
                        clearing: true
                        max_obstacle_height: 1.0
                        min_obstacle_height: -1.0
                        inf_is_valid: true
                    track_unknown_space: false #true
                    z_voxels: 8
                inflation_layer:
                    inflation_radius: 0.75
                    cost_scaling_factor: 1
            GlobalPlanner:
                allow_unknown: false
            TrajectoryPlannerROS:
                max_vel_x: 0.5
                min_vel_x: 0.1
                max_vel_theta: 0.5
                min_vel_theta: -0.5
                min_in_place_vel_theta: 0.4
                acc_lim_x: 0.5 #2.5
                acc_lim_y: 0.0 #1.0
                acc_lim_theta: 0.5 #3.2
                holonomic_robot: false
                yaw_goal_tolerance: 0.05 #0.15
                xy_goal_tolerance: 0.075 #0.15
                latch_xy_goal_tolerance: false #true
                meter_scoring: true
                occdist_scale: 0.5 #0.01
                heading_scoring: true
                heading_scoring_timestep: 1.0 #0.8
                dwa: true
                #global_frame_id: odom
                oscillation_reset_dist: 0.075
            DWAPlannerROS:
                acc_lim_x: 2.0 #slow 1.0, fast 2.0
                acc_lim_y: 0.0
                acc_lim_th: 2.0 #slow 2.0, fast 3.2
                max_trans_vel: 0.55
                min_trans_vel: 0.1
                max_vel_x: 0.55
                min_vel_x: 0.0
                max_vel_y: 0.0
                min_vel_y: 0.0
                max_rot_vel: 0.55 #1.0
                min_rot_vel: 0.4
                yaw_goal_tolerance: 0.2
                xy_goal_tolerance: 0.15
                latch_xy_goal_tolerance: true 
                sim_time: 1.7
                sim_granularity: 0.025
                vx_samples: 6
                vy_samples: 1
                vtheta_samples: 20
                penalize_negative_x: false #true
                path_distance_bias: 64.0 #32.0
                goal_distance_bias: 24.0
                occdist_scale: 0.5
                oscillation_reset_dist: 0.075
        </rosparam>
    </node>
</launch>
