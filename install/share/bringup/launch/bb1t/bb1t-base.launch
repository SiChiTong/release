<?xml version="1.0"?>
<launch>
    <include file="$(find bringup)/launch/bringup-base.launch"/>

    <node name="tf_base_footprint" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            frame_id: base_footprint
            z: 0.033
        </rosparam>
    </node>

    <node name="tf_base_laser" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser
            x: 0.45
            z: 0.20
        </rosparam>
    </node>

    <node name="tf_base_imu" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_imu
            x: 0.225
            y: 0.088
            z: 0.048
        </rosparam>
    </node>


    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>

    <include file="$(find bringup)/launch/bb1t/rosbridge_drive_aqmd2s_bb1t.launch">
        <arg name="drive_port_left" value="/dev/usb_top2"/>
        <arg name="drive_port_right" value="/dev/usb_top1"/>
        <arg name="wheel_seperation" value="0.495"/>
        <arg name="wheel_ratio" value="19024.96"/>
    </include>

    <!-- <include file="$(find bringup)/launch/bb1t/rosbridge_motor_lift_1t.launch">
        <arg name="plc_port" value="/dev/usb_left4"/>
    </include> -->

    <!-- <include file="$(find bringup)/launch/bb1t/rosbridge_drive_poll_1t.launch">
        <arg name="poll_port" value="/dev/usb_right"/>
    </include> -->

    <include file="$(find bringup)/launch/bb1t/rosbridge_plc_1t.launch">
        <arg name="plc_port" value="/dev/usb_top4"/>
    </include>

    <!-- <include file="$(find bringup)/launch/bb8/rosbridge_radio_8.launch">
        <arg name="plc_port" value="/dev/usb_top1"/>
    </include> --> 
    
    <include file="$(find bringup)/launch/rosbridge_imu_jy901.launch">
        <arg name="imu_port" value="/dev/usb_top3"/>
    </include>

    <node name="teleop_keyboard" pkg="teleop_keyboard" type="teleop_keyboard" output="screen"/>
    <node name="teleop_joystick" pkg="teleop_joystick" type="teleop_joystick" output="screen"/>

    <node name="lms1xx" pkg="lms1xx" type="LMS1xx_node">
        <rosparam>
            host: 192.168.0.10
            frame_id: base_laser
        </rosparam>
    </node>

   <!--  <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
        <rosparam>
            ip_address: 192.168.0.10
            frame_id: base_laser
            publish_multiecho: false
            angle_min: -2.2
            angle_max: 2.2
            skip: 0
        </rosparam>
    </node> -->

    
    <!-- <node name="sick_tim571" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
        <rosparam>
            min_ang: -2.1 #-1.75
            max_ang: 2.1 #1.75
            frame_id: base_laser
            range_max: 25.0
            hostname: 192.168.0.10
        </rosparam>
    </node> -->

    <node name="scan_filter" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan"/>
        <remap from="scan_filtered" to="scan_filtered"/>
        <rosparam>
            scan_filter_chain:
            - type: laser_filters/LaserArrayFilter
              name: laser_median_filter
              params: 
                range_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
                intensity_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
            - name: angle_1
              type: LaserScanAngularBoundsFilter
              params:
                lower_angle: -2.5
                upper_angle: -1.75
            - name: angle_2
              type: LaserScanAngularBoundsFilter
              params:
                lower_angle: 1.75
                upper_angle: 2.5
<!--             - type: laser_filters/LaserScanBoxFilter
              name: box_filter
              params:
                box_frame: base_link
                max_x: 0.42
                max_y: 0.47
                max_z: 1.00
                min_x: 0.20
                min_y: -0.47
                min_z: -5.0 -->
        </rosparam>
    </node>

    <node name="scan_filter_2" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan_rectified"/>
        <remap from="scan_filtered" to="scan_filtered_2"/>
        <rosparam>
            scan_filter_chain:
            - name: shadows
              type: laser_filters/ScanShadowsFilter
              params:
                min_angle: 10
                max_angle: 172
                neighbors: 1
                window: 1
        </rosparam>
    </node>

    <!-- <node name="scan_marker" pkg="scan_marker" type="scan_marker" output="screen">
        <remap from="scan" to="scan_rectified"/>
        <remap from="pose" to="/scan_marker/pose"/>
        <rosparam>
            marker_obs: 2
            marker_interval: 0.86
            marker_threshold: 224.0 #240.0
        </rosparam>
    </node> -->

    <node name="scan_rectifier" pkg="scan_rectifier" type="scan_rectifier" output="screen">
        <remap from="scan_input" to="scan_filtered"/>
        <remap from="scan_output" to="scan_rectified"/>
        <rosparam>
            max_range: 20.0
        </rosparam>
    </node>

    <node name="robot_pose_ekf" pkg="robot_pose_ekf" type="robot_pose_ekf">
        <rosparam>
            output_frame: odom
            base_footprint_frame: base_footprint
            freq: 30.0
            sensor_timeout: 1.0
            odom_used: true
            imu_used: true
            vo_used: false
        </rosparam>
    </node>

    <node name="diagnostic_aggregator" pkg="diagnostic_aggregator" type="aggregator_node" args="CPP" output="screen">
        <rosparam>
        pub_rate: 0.5
        analyzers:
          device:
            type: diagnostic_aggregator/AnalyzerGroup
            path: device
   <!--  analyzers:
      odom_left:
        type: diagnostic_aggregator/GenericAnalyzer
        path: odom_l
        timeout: 5.0
        find_and_remove_prefix: left
        num_items: 2
      odom_right:
        type: diagnostic_aggregator/GenericAnalyzer
        path: odom_r
        timeout: 5.0
        find_and_remove_prefix: right
        num_items: 2
      joystick:
        type: diagnostic_aggregator/GenericAnalyzer
        path: 'joystick'
        timeout: 5.0
        startswith: ['Battery', 'Charging State', 'Connection', 'ps3_joy']
        remove_prefix: 'ps3_joy' -->
        </rosparam>
    </node>
</launch>
