<?xml version="1.0"?>
<launch>
    <include file="$(find bringup)/launch/bringup-base.launch"/>

    <node name="tf_base_footprint" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            frame_id: base_footprint
            z: 0.04
        </rosparam>
    </node>

    <node name="tf_base_laser" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser
            x: 0.28
            z: 0.22
            roll: 3.14159
        </rosparam>
    </node>

    <node name="tf_base_imu" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_imu
            x: 0.28
            y: 0.28
        </rosparam>
    </node>

    <node name="tf_base_camera" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: camera_link
            x: 0.30
            y: 0.05
            z: 0.135            
        </rosparam>
    </node>

    <node name="tf_base_sonar11" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar11
            x: 0.34
            y: 0.19
            z: 0.30
            yaw: 0.45
        </rosparam>
    </node>

    <node name="tf_base_sonar12" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar12
            x: 0.26
            y: 0.23
            z: 0.30
            yaw: 1.34
        </rosparam>
    </node>

    <node name="tf_base_sonar13" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar13
            x: -0.26
            y: 0.23
            z: 0.30
            yaw: 1.80
        </rosparam>
    </node>

    <node name="tf_base_sonar14" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar14
            x: -0.34
            y: 0.19
            z: 0.30
            yaw: 2.69
        </rosparam>
    </node>

    <node name="tf_base_sonar21" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar21
            x: 0.34
            y: -0.19
            z: 0.30
            yaw: -0.45
        </rosparam>
    </node>

    <node name="tf_base_sonar22" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar22
            x: 0.26
            y: -0.23
            z: 0.30
            yaw: -1.34
        </rosparam>
    </node>

    <node name="tf_base_sonar23" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar23
            x: -0.26
            y: -0.23
            z: 0.30
            yaw: -1.80
        </rosparam>
    </node>

    <node name="tf_base_sonar24" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_sonar24
            x: -0.34
            y: -0.19
            z: 0.30
            yaw: -2.69
        </rosparam>
    </node>

    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>

    <include file="$(find bringup)/launch/rosbridge_drive_aqmd2.launch">
        <arg name="drive_port" value="/dev/usb_extern"/>
        <arg name="wheel_seperation" value="0.370"/>
        <arg name="wheel_ratio" value="14767.5"/>
    </include>

    <include file="$(find bringup)/launch/rosbridge_imu_jy901.launch">
        <arg name="imu_port" value="/dev/usb_top"/>
    </include>

    <!--<include file="$(find bringup)/launch/rosbridge_sonar_hrg.launch">       
    </include>-->

    <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
        <rosparam>
            ip_address: 192.168.0.10
            frame_id: base_laser
            publish_multiecho: false
            angle_min: -2.2
            angle_max: 2.2
            skip: 0
        </rosparam>
    </node>
  
    <node name="scan_filter" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan"/>
        <remap from="scan_filtered" to="scan_filtered"/>
        <rosparam>
            scan_filter_chain:
            - type: laser_filters/LaserArrayFilter
              name: laser_median_filter
              params: 
                range_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
                intensity_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
        </rosparam>
    </node>

    <node name="scan_rectifier" pkg="scan_rectifier" type="scan_rectifier" output="screen">
        <remap from="scan_input" to="scan_filtered"/>
        <remap from="scan_output" to="scan_rectified"/>
        <rosparam>
            max_range: 20.0
        </rosparam>
    </node>

    <node name="robot_pose_ekf" pkg="robot_pose_ekf" type="robot_pose_ekf">
        <rosparam>
            output_frame: odom
            base_footprint_frame: base_footprint
            freq: 30.0
            sensor_timeout: 1.0
            odom_used: true
            imu_used: true
            vo_used: false
        </rosparam>
    </node>

<!-- 
    <param name="camera/driver/data_skip" value="5"/>
    <include file="$(find openni2_launch)/launch/openni2.launch"/>
    <include file="$(find yocs_cmd_vel_mux)/launch/standalone.launch"/>
 -->

    <node name="diagnostic_aggregator" pkg="diagnostic_aggregator" type="aggregator_node" args="CPP" output="screen">
        <rosparam>
analyzers:
  device:
    type: diagnostic_aggregator/AnalyzerGroup
    path: device
    analyzers:
      odom_left:
        type: diagnostic_aggregator/GenericAnalyzer
        path: odom_l
        timeout: 5.0
        find_and_remove_prefix: left
        num_items: 2
      odom_right:
        type: diagnostic_aggregator/GenericAnalyzer
        path: odom_r
        timeout: 5.0
        find_and_remove_prefix: right
        num_items: 2
      joystick:
        type: diagnostic_aggregator/GenericAnalyzer
        path: 'joystick'
        timeout: 5.0
        startswith: ['Battery', 'Charging State', 'Connection', 'ps3_joy']
        remove_prefix: 'ps3_joy'
        </rosparam>
    </node>
</launch>
