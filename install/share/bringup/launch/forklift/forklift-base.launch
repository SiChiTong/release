<?xml version="1.0"?>
<launch>
    <!-- <node name="system_shell" pkg="system_shell" type="system_shell" output="screen">
        <rosparam>
            time_duration: 7.0
            #init_cmd: ll
        </rosparam>
    </node> -->

    <node name="tf_base_footprint" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            frame_id: base_footprint
            z: 0.09
        </rosparam>
    </node>

    <node name="tf_base_laser" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser
            x: 0.76
            z: 1.1035
        </rosparam>
    </node>

    <node name="tf_base_laser_2" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser_another
            x: 1.70
            z: 0.13
        </rosparam>
    </node>

    <node name="tf_base_imu" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_imu
            x: -0.12
            z: 0.88
        </rosparam>
    </node>

    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>
 
    <node name="rosbridge_plc" pkg="rosbridge_driver" type="rosbridge_driver" output="screen">
        <rosparam>
            port_chain:
              - name: plc
                type: serial
                serial_port: /dev/usb_right
                serial_baud: 115200
                serial_stop: 1
                action_chain:
                  - name: plc
                    type: write
                    byte: [0x06, 0x10, 0x00, 0x64, 0x00, 0x01, 0x02, 0xcf, 0xfd, crc16, little]
                  - name: plc
                    type: read
                    byte: [0x06, 0x10, 0x00, 0x64, 0x00, 0x01, crc16, little]
            topic_chain:
              - name: cmd_vel #ackermann_msg
                type: subscribe
                wheel_model: acke
                fork_a: 4.0 #2.296(v)/0.555(m/s)
                fork_b: 4.1
                fork_c: 3.67
                plc_a: 3125.0 #3149.2
                plc_b: 0.0903
                angle_b_l: 113.7183 #115.58209 #113.3803
                angle_k_l: 30.985915  #32.8358209 #28.1690141
                angle_b_r: 94.9882 #115.58209 #113.3803
                angle_k_r: 25.88235294  #32.8358209 #28.1690141
                min_vel: 1.23
                max_vel: 6.9
                wheel_base: 1.41
                stop_mode: move_stop
                action_chain:
                  - name: plc
                    type: write
                    byte: [0x06, 0x10, 0x00, 0x64, 0x00, 0x09, 0x12, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, speed_plc, big, angle_left, big, angle_right, big, crc16, little]
                  - name: plc
                    type: read
                    byte: [0x06, 0x06, 0x00, 0x64, 0x00, 0x09, crc16, little]
              - name: diagnostics
                type: publish
        </rosparam>
    </node>

    <node name="urg_node_1" pkg="urg_node" type="urg_node" output="screen">
        <rosparam>
            ip_address: 192.168.0.10
            frame_id: base_laser
            publish_multiecho: false
            angle_min: -2.35
            angle_max: 2.35
            skip: 0
        </rosparam>
    </node>

    <node name="urg_node_2" pkg="urg_node" type="urg_node" output="screen">
        <rosparam>
            ip_address: 192.168.0.20
            frame_id: base_laser_another
            publish_multiecho: false
            angle_min: -1.57
            angle_max: 1.57
            skip: 0
        </rosparam>
        <remap from="scan" to="scan_another"/>
    </node>
  
    <node name="scan_filter" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan"/>
        <remap from="scan_filtered" to="scan_filtered"/>
        <rosparam>
            scan_filter_chain:
            - type: laser_filters/LaserArrayFilter
              name: laser_median_filter
              params: 
                range_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
                intensity_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
        </rosparam>
    </node>

    <node name="scan_rectifier" pkg="scan_rectifier" type="scan_rectifier" output="screen">
        <remap from="scan_input" to="scan_filtered"/>
        <remap from="scan_output" to="scan_rectified"/>
        <rosparam>
            max_range: 20.0
        </rosparam>
    </node>

</launch>

