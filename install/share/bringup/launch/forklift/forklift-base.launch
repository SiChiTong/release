<?xml version="1.0"?>
<launch>
    <include file="$(find bringup)/launch/bringup-base.launch"/>

     <node name="tf_base_footprint" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            frame_id: base_footprint
            z: 0.05
        </rosparam>
    </node>

    <node name="tf_base_laser" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser
            x: 1.35 #0.475 #0 #1.36
            z: 1.795
            yaw: 3.14159
        </rosparam>
    </node>

    <node name="tf_base_laser_down" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_laser_down
            x: 1.79 #0.915 #0.25 
            z: 0.01
            roll: 3.14
        </rosparam>
    </node>

    <node name="tf_base_imu" pkg="tf_broadcaster" type="tf_broadcaster" output="screen">
        <rosparam>
            child_frame_id: base_imu
            x: 1.45 #0.575 #0.1
            y: 0.08
            z: 1.33
        </rosparam>
    </node>

    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>

    <include file="$(find bringup)/launch/rosbridge_plc_forklift.launch">
        <arg name="plc_port" value="/dev/usb_right"/>
    </include>

    <include file="$(find bringup)/launch/rosbridge_imu_jy901.launch">
        <arg name="imu_port" value="/dev/usb_left"/>
    </include>

    <node name="lms1xx" pkg="lms1xx" type="LMS1xx_node">
        <rosparam>
            host: 192.168.0.10
            frame_id: base_laser
        </rosparam>
    </node>

    <node name="sick_tim561" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
        <remap from= "scan" to="scan_down"/>
        <rosparam>
            frame_id: base_laser_down
            range_max: 10.0
            hostname: 192.168.0.11
            min_ang: -1.57
            max_ang: 1.57
        </rosparam>
    </node>
  
    <node name="scan_filter" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan"/>
        <remap from="scan_filtered" to="scan_filtered"/>
        <rosparam>
            scan_filter_chain:
            - type: laser_filters/LaserArrayFilter
              name: laser_median_filter
              params: 
                range_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
                intensity_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
        </rosparam>
    </node>

    <node name="scan_filter_down" pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen">
        <remap from="scan" to="scan_down"/>
        <remap from="scan_filtered" to="scan_filtered_down"/>
        <rosparam>
            scan_filter_chain:
            - type: laser_filters/LaserArrayFilter
              name: laser_median_filter
              params: 
                range_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
                intensity_filter_chain:
                  - name: median_5
                    type: filters/MultiChannelMedianFilterFloat 
                    params:
                      number_of_observations: 5
                      unused: 10
        </rosparam>
    </node>

    <node name="scan_rectifier" pkg="scan_rectifier" type="scan_rectifier" output="screen">
        <remap from="scan_input" to="scan_filtered"/>
        <remap from="scan_output" to="scan_rectified"/>
        <rosparam>
            max_range: 20.0
        </rosparam>
    </node>

    <node name="scan_rectifier_down" pkg="scan_rectifier" type="scan_rectifier" output="screen">
        <remap from="scan_input" to="scan_filtered_down"/>
        <remap from="scan_output" to="scan_rectified_down"/>
        <rosparam>
            max_range: 10.0
        </rosparam>
    </node>
    
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher" output="screen"/>

    <include file="$(find pallet_recognition)/launch/pallet_recognition.launch"/>

    <node name="diagnostic_aggregator" pkg="diagnostic_aggregator" type="aggregator_node" args="CPP" output="screen">
        <rosparam>
analyzers:
  device:
    type: diagnostic_aggregator/AnalyzerGroup
    path: device
    analyzers:
      odom_left:
        type: diagnostic_aggregator/GenericAnalyzer
        path: odom_l
        timeout: 5.0
        find_and_remove_prefix: left
        num_items: 2
      odom_right:
        type: diagnostic_aggregator/GenericAnalyzer
        path: odom_r
        timeout: 5.0
        find_and_remove_prefix: right
        num_items: 2
      joystick:
        type: diagnostic_aggregator/GenericAnalyzer
        path: 'joystick'
        timeout: 5.0
        startswith: ['Battery', 'Charging State', 'Connection', 'ps3_joy']
        remove_prefix: 'ps3_joy'
        </rosparam>
    </node>
</launch>
