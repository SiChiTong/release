TebLocalPlannerROS:

 odom_topic: /odometry/filtered
 map_frame: /map
 # Trajectory
  
 teb_autosize: True
 dt_ref: 0.2 #0.3 Temporal resolution of the planned trajectory (usually it is set to the magnitude of the 1/control_rate)
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 max_global_plan_lookahead_dist: 1.5 #3.0
 feasibility_check_no_poses: 2
 global_plan_viapoint_sep: 0.5 #-0.1 #Min. separation between each two consecutive via-points extracted from the global plan [if negative: disabled]
 publish_feedback: True #False #Publish planner feedback containing the full trajectory and a list of active obstacles (should be enabled only for evaluation or debugging purposes)   
 # Robot
         
 max_vel_x: 0.5 #0.4
 max_vel_x_backwards: 0.3 #0.15
 max_vel_y: 0.0
 max_vel_theta: 0.14 #1.5359 # the angular velocity is also bounded by min_turning_radius in case of a carlike robot (r = v / omega), r_min < v/omega
 acc_lim_x: 0.5
 acc_lim_theta: 0.5

 # ********************** Carlike robot parameters ********************
 min_turning_radius: 2.026 #1.4809     # Min turning radius of the carlike robot (compute value using a model or adjust with rqt_reconfigure manually)
 wheelbase: 1.425 #1.48                # Wheelbase of our robot
 cmd_angle_instead_rotvel: False #True # stage simulator takes the angle instead of the rotvel as input (twist message)
 # ********************************************************************

 footprint_model: # types: "point", "circular",  "two_circles", "line", "polygon"
   
   # type: "line"

   # line_start: [-0.18, 0.0] # for type "line"
   # line_end: [0.78, 0.0] # for type "line"
    type: "polygon"
   # vertices: [[0.78,-0.34],[-0.18,-0.34],[-0.18,0.34],[0.78,0.34]]
    vertices: [[1.775, 0.44], [1.775, -0.44], [-0.372, -0.44], [-0.372, 0.44]] #[ [-0.20,-0.40], [1.70,-0.40], [1.70,0.40], [-0.20,0.40] ]
 
 # GoalTolerance
    
 xy_goal_tolerance: 0.3 #0.1
 yaw_goal_tolerance: 0.1  #0.6
 free_goal_vel: False 
    
 # Obstacles
    
 min_obstacle_dist: 0.5 #0.25 # This value must also include our robot's expansion, since footprint_model is set to "line".
 inflation_dist: 0.6
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.0
 obstacle_poses_affected: 20 #30
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 # Optimization
    
 no_inner_iterations: 4 #5
 no_outer_iterations: 2 #4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 2
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 2500
 weight_kinematics_forward_drive: 1
 weight_kinematics_turning_radius: 25 #1
 weight_optimaltime: 1
 weight_obstacle: 50
 weight_dynamic_obstacle: 10 # not in use yet

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 selection_cost_hysteresis: 1.0
 selection_obst_cost_scale: 1.0
 selection_alternative_time_cost: False
 roadmap_graph_no_samples: 25 #15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False
 viapoints_all_candidates: False #True #If true, all trajectories of different topologies are attached to the set of via-points, otherwise only the trajectory sharing the same one as the initial/global plan is attached
