#!/usr/bin/python
PACKAGE='straf_recovery'
import roslib
from dynamic_reconfigure.parameter_generator_catkin import *

roslib.load_manifest(PACKAGE)

gen = ParameterGenerator()

#Name, Type, Reconfiguration level, Description, Default, Min, Max
gen.add("enabled", bool_t, 0, "enabled", True)
gen.add("go_to_goal_distance_threshold", double_t, 0, "UNIMPLEMENTED. Do not use.", 0, 0, 0)
gen.add("minimum_translate_distance", double_t, 0, "minimum distance we must translate", 0.5, 0, 10)
gen.add("maximum_translate_distance", double_t, 0, "maximum distance we can translate", 5.0, 0, 10)
gen.add("straf_vel", double_t, 0, "constant velocity to straf at", 0.1, 0, 10)
gen.add("timeout", double_t, 0, "time in seconds to straf for. this overrides min and max distances", 10, 0, 60)
gen.add("frequency", double_t, 0, "frequency at which we update direction", 20, 0, 60)
gen.add("xy_goal_tolerance", double_t, 0, "distance at which we consider the goal reached", 0.1, 0, 10)

exit(gen.generate(PACKAGE, "straf_recovery", "StrafRecovery"))

